buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:18.0.+'
    compile fileTree(dir: 'libs', include: '*.jar')
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.0.1"

/*
    signingConfigs {
        release {
            storeFile file(System.console().readLine("\n\$ Enter keystore path: "))
            storePassword System.console().readLine("\n\$ Enter keystore password: ")
            keyAlias System.console().readLine("\n\$ Enter key alias: ")
            keyPassword System.console().readLine("\n\$ Enter key password: ")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
*/

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 18
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }
}

/*
 * JNI Hack for gradle - works alright, copies native libs over into build folder no problem
 * https://gist.github.com/khernyo/4226923
 */

task copyNativeLibs(type: Copy) {
    from(new File('libs')) { include '**/*.so' }
    into new File(buildDir, 'native-libs')
}

tasks.withType(Compile) { compileTask -> compileTask.dependsOn copyNativeLibs }

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniDir new File(buildDir, 'native-libs')
}
